<?xml version="1.0" encoding="utf-8"?>

<includes>
  
  <include name="PosterHome">
    <param name="id" default="0"/>
    <param name="idcont" default="8080"/>
    <definition>
      
      <control type="group">
        <width>324</width>
        <height>450</height>
        
        <!-- <visible>!Container(8080).OnScrollNext+!Container(8080).OnScrollPrevious</visible> 
        <animation type="Visible" reversible="true" >-->
          <animation type="Conditional" condition="Control.IsVisible(9998)" reversible="false">
            <effect type="rotatey" center="162,0" start="180" end="0" time="1000" /> 
           <effect type="fade" start="10" end="85" time="1100" />       
        </animation>        
        
      <control type="image">
         
        <width>324</width>
        <height>450</height>
        <texture background="true" diffuse="DefaultManquant.png" fallback="DefaultManquant.png">$INFO[Container($PARAM[idcont]).ListItem($PARAM[id]).Art(poster)]</texture>
        <aspectratio scalediffuse="true">stretch</aspectratio>
      </control>
      
      </control>
    </definition>
  </include>
  
  <include name="Viewtype_MurHome">
    <control type="group">
      <control type="button" id="9998">
        <left>-2000</left>
        <label></label>
        <visible>!Container(8080).OnScrollNext+!Container(8080).OnScrollPrevious</visible>
      </control>
      <visible>Integer.IsGreater(Container(8080).NumItems,0)+!Container(8080).IsUpdating+
        [[Control.HasFocus(9001)+String.IsEqual(Container(9001).ListItem.Property(backgroundplayliststyle),X3)]|
        [Control.HasFocus(9000)+String.IsEqual(Container(9000).ListItem.Property(backgroundplayliststyle),X3)]]</visible>
        <!-- -->
      <animation type="Visible" reversible="true">
        <effect type="fade" start="0" end="90" time="2000"  /> 
        <effect type="zoom" center="960,540" start="150" end="100" time="800"  />
      </animation>
      -->
      
      <control type="grouplist">
        

        <posx>0</posx>
        <posy>-90</posy>
        <orientation>horizontal</orientation>
        <itemgap>0</itemgap>
        <width>1920</width>
        <height>460</height>
        <include content="PosterHome">
          <param name="id">0</param>
        </include>
        <include content="PosterHome">
          <param name="id">1</param>
        </include>
        <include content="PosterHome">
          <param name="id">2</param>
        </include>
        <include content="PosterHome">
          <param name="id">3</param>
        </include>
        <include content="PosterHome">
          <param name="id">4</param>
        </include>
        <include content="PosterHome">
          <param name="id">5</param>
        </include>

      </control>
      <control type="grouplist">
      

        <posx>0</posx>
        <posy>360</posy>
        <orientation>horizontal</orientation>
        <itemgap>0</itemgap>
        <width>1920</width>
        <height>460</height>
        <include content="PosterHome">
          <param name="id">6</param>
        </include>
        <include content="PosterHome">
          <param name="id">7</param>
        </include>
        <include content="PosterHome">
          <param name="id">8</param>
        </include>
        <include content="PosterHome">
          <param name="id">9</param>
        </include>
        <include content="PosterHome">
          <param name="id">10</param>
        </include>
        <include content="PosterHome">
          <param name="id">11</param>
        </include>

      </control>
      <control type="grouplist">
       

        <posx>0</posx>
        <posy>810</posy>
        <orientation>horizontal</orientation>
        <itemgap>0</itemgap>
        <width>1920</width>
        <height>460</height>
        <include content="PosterHome">
          <param name="id">12</param>
        </include>
        <include content="PosterHome">
          <param name="id">13</param>
        </include>
        <include content="PosterHome">
          <param name="id">14</param>
        </include>
        <include content="PosterHome">
          <param name="id">15</param>
        </include>
        <include content="PosterHome">
          <param name="id">16</param>
        </include>
        <include content="PosterHome">
          <param name="id">17</param>
        </include>

      </control>
    </control>

  </include>
  <variable name="angle1">
    <value>55</value>
  </variable>
  <variable name="angle2">
    <value>95</value>
  </variable>
  <variable name="angle13">
    <value>155</value>
  </variable>
  <include name="DefautPochette">
    <param name="id" default="0"/>
    <param name="idcont" default="8080"/>
    <param name="End" default="0" />
    <param name="End2" default="0" />
    <param name="PX" default="0" />
    <param name="PY" default="0" />
    <definition>
      <control type="group">
        <top>$PARAM[PY]</top>
        <left>$PARAM[PX]</left>
          
        
        <control type="group">
           <animation type="Conditional" condition="true" reversible="false">
            <effect type="rotate" center="auto" start="$PARAM[End]" end="$PARAM[End]" time="0" />          
          </animation>
         
          <animation type="Conditional" condition="Control.IsVisible(9997)" reversible="false">
          <effect type="rotatey" center="150,0" start="180" end="0" time="1000" /> 
          <effect type="fade"  start="10" end="100" time="1500" />
          
        </animation>
           
          <visible>![String.IsEqual(Container($PARAM[idcont]).ListItem($PARAM[id]).DbType,artist)|String.IsEqual(Container($PARAM[idcont]).ListItem($PARAM[id]).DbType,song)|String.IsEqual(Container($PARAM[idcont]).ListItem($PARAM[id]).DbType,album)]</visible>
          <control type="image">
            <posx>20</posx>
            <posy>21</posy>
            <texture>$INFO[Container($PARAM[idcont]).ListItem($PARAM[id]).Art(poster)]</texture>
            <width>286</width>
            <fadetime>400</fadetime>
            <height>412</height>
            <aspectratio>scale</aspectratio>
          </control>

          <control type="image">
            <posx>14</posx>
            <posy>-19</posy>
            <width>298</width>
            <height>455</height>
            <texture>frames/bcover.png</texture>
          </control>

          <control type="grouplist">
            <height>40</height>
            <width>250</width>
            <posy>-10</posy>
            <posx>50</posx>
            <align>center</align>

            <orientation>horizontal</orientation>
            <control type="image">
              <visible>!String.IsEmpty(Container($PARAM[idcont]).ListItem($PARAM[id]).VideoResolution)</visible>
              <width>60</width>
              <height>30</height>
              <aspectratio>keep</aspectratio>
              <texture>$INFO[Container($PARAM[idcont]).ListItem($PARAM[id]).VideoResolution,flags/VideoResolution/,.png]</texture>
            </control>
            <control type="image">
              <visible>!String.IsEmpty(Container($PARAM[idcont]).ListItem($PARAM[id]).AudioChannels)</visible>
              <width>60</width>
              <height>30</height>
              <aspectratio>keep</aspectratio>
              <texture>$INFO[Container($PARAM[idcont]).ListItem($PARAM[id]).AudioChannels,flags/AudioChannels/,ch.png]</texture>
            </control>
            <control type="image">
              <visible>!String.IsEmpty(Container($PARAM[idcont]).ListItem($PARAM[id]).AudioLanguage)</visible>
              <width>60</width>
              <height>30</height>
              <aspectratio>keep</aspectratio>
              <texture background="true" >resource://resource.images.languageflags.colour/$INFO[Container($PARAM[idcont]).ListItem($PARAM[id]).AudioLanguage].png</texture>
            </control>

            <control type="image">
              <visible>String.IsEqual(Container($PARAM[idcont]).ListItem($PARAM[id]).DbType,movie)</visible>
              <width>60</width>
              <height>30</height>
              <aspectratio>keep</aspectratio>
              <texture background="true" >acteurs/films.png</texture>
            </control>
            <control type="image">
              <visible>String.IsEqual(Container($PARAM[idcont]).ListItem($PARAM[id]).DbType,season)|String.IsEqual(Container($PARAM[idcont]).ListItem($PARAM[id]).DbType,episode)|String.IsEqual(Container($PARAM[idcont]).ListItem($PARAM[id]).DbType,tvshow)</visible>
              <width>60</width>
              <height>30</height>
              <aspectratio>keep</aspectratio>
              <texture background="true" >acteurs/series.png</texture>
            </control>
          </control>

        </control>
        <!-- --------------------------------------------------------- ---->
        <control type="group">
        <animation type="Conditional" condition="true" reversible="false">
            <effect type="rotate" center="auto" start="$PARAM[End]" end="$PARAM[End]" time="0" />          
          </animation>
         
          <animation type="Conditional" condition="Control.IsVisible(9997)" reversible="false">
          <effect type="rotatey" center="150,0" start="180" end="0" time="1000" /> 
          <effect type="fade"  start="10" end="100" time="1500" />
          
        </animation>
          <visible>[String.IsEqual(Container($PARAM[idcont]).ListItem($PARAM[id]).DbType,artist)|String.IsEqual(Container($PARAM[idcont]).ListItem($PARAM[id]).DbType,song)|String.IsEqual(Container($PARAM[idcont]).ListItem($PARAM[id]).DbType,album)]</visible>
          <control type="image">

            <width>355</width>
            <height>340</height>
            <texture>frames/cdcasexback.png</texture>
            <aspectratio scalediffuse="true">stretch</aspectratio>
          </control>
          <control type="image">
             <left>29</left>
        <top>6</top>
        <width>327</width>
        <height>327</height>
        <aspectratio scalediffuse="true" aligny="center">stretch</aspectratio>
             <texture background="true">frames/cdcasexupback.png</texture>
        <bordersize>2</bordersize>
          </control>


          <control type="image">
            <visible>!String.IsEmpty(Container($PARAM[idcont]).ListItem($PARAM[id]).Art(thumb))</visible>
            <posx>17</posx>
            <posy>3</posy>
            <width>335</width>
            <height>335</height>
            <texture>$INFO[Container($PARAM[idcont]).ListItem($PARAM[id]).Art(thumb)]</texture>

            <aspectratio>scale</aspectratio>
          </control>
          <control type="image">
            <visible>String.IsEmpty(Container($PARAM[idcont]).ListItem($PARAM[id]).Art(thumb))</visible>
            <posx>17</posx>
            <posy>3</posy>
            <width>335</width>
            <height>335</height>
            <texture>$INFO[Container($PARAM[idcont]).ListItem($PARAM[id]).Icon]</texture>

            <aspectratio>scale</aspectratio>
          </control>
          <control type="image">

            <width>355</width>
            <height>340</height>
            <texture>frames/cdcasexup.png</texture>
            <aspectratio scalediffuse="true">stretch</aspectratio>
          </control>

          <control type="button">
            <left>2</left>
            <top>310</top>
            <onfocus>9000</onfocus>
            <width>280</width>
            <animation effect="rotate" center="2,310" end="90" time="0" condition="true">Conditional</animation>
            <align>center</align>
            <height>30</height>
            <label>$INFO[Container($PARAM[idcont]).ListItem($PARAM[id]).Label]</label>
            <font>exptextacteurs</font>
            <textcolor>FFFFFFFF</textcolor>
            <shadowcolor>FF7F7F7F</shadowcolor>
            <texturenofocus colordiffuse="AFFFFFFF">black.png</texturenofocus>
          </control>



        </control>
      </control>
    </definition>
  </include>

  <include name="pochettesjetees">
    <!-- -->
    <control type="group">
      <control type="button" id="9997">
        <left>-2000</left>
        <label></label>
        <visible>!Container(8080).OnScrollNext+!Container(8080).OnScrollPrevious</visible>
      </control>
      <!-- pochettes jetees -->
      <posy>-200</posy>
      <posx>-200</posx>
      <!-- <animation type="Conditional" condition="Container(8080).OnScrollNext|Container(8080).OnScrollPrevious" reversible="true" > -->
      <animation type="Visible" reversible="true">
        <effect type="fade"  start="5" end="95" time="500"  />

      </animation>

      <visible>Integer.IsGreater(Container(8080).NumItems,0)+!Container(8080).IsUpdating+
        [[Control.HasFocus(9001)+String.IsEqual(Container(9001).ListItem.Property(backgroundplayliststyle),X2)]|
        [Control.HasFocus(9000)+String.IsEqual(Container(9000).ListItem.Property(backgroundplayliststyle),X2)]]</visible>


      <include content="DefautPochette">
        <param name="PX">1170</param>
        <param name="PY">1030</param>
        <param name="id">0</param>
        <param name="End">-65</param>
      </include>

      <include content="DefautPochette">
        <param name="PX">500</param>
        <param name="PY">150</param>
        <param name="id">1</param>
        <param name="End">10</param>
      </include>

      <include content="DefautPochette">
        <param name="PX">1550</param>
        <param name="PY">300</param>
        <param name="id">2</param>
        <param name="End">-20</param>
      </include>

      <include content="DefautPochette">
        <param name="PX">800</param>
        <param name="PY">0</param>
        <param name="id">3</param>
        <param name="End">65</param>
      </include>


      <include content="DefautPochette">
        <param name="PX">1000</param>
        <param name="PY">170</param>
        <param name="id">4</param>
        <param name="End">25</param>
      </include>

      <include content="DefautPochette">
        <param name="PX">1400</param>
        <param name="PY">80</param>
        <param name="id">5</param>
        <param name="End">10</param>
      </include>

      <include content="DefautPochette">
        <param name="PX">1650</param>
        <param name="PY">700</param>
        <param name="id">6</param>
        <param name="End">15</param>
      </include>

      <include content="DefautPochette">
        <param name="PX">400</param>
        <param name="PY">450</param>
        <param name="id">7</param>
        <param name="End">-35</param>
      </include>

      <include content="DefautPochette">
        <param name="PX">200</param>
        <param name="PY">600</param>
        <param name="id">8</param>
        <param name="End">10</param>
      </include>


      <include content="DefautPochette">
        <param name="PX">1200</param>
        <param name="PY">500</param>
        <param name="id">9</param>
        <param name="End">-10</param>
      </include>

      <include content="DefautPochette">
        <param name="PX">250</param>
        <param name="PY">-150</param>
        <param name="id">10</param>
        <param name="End">35</param>
      </include>

      <include content="DefautPochette">
        <param name="PX">850</param>
        <param name="PY">850</param>
        <param name="id">11</param>
        <param name="End">-5</param>
      </include>

      <include content="DefautPochette">
        <param name="PX">1850</param>
        <param name="PY">450</param>
        <param name="id">12</param>
        <param name="End">15</param>
      </include>

    </control>
<!-- defilement fanart -->

    <control type="image">      
      <visible>[Control.HasFocus(9000)|Control.HasFocus(9001)]+!Container(8080).OnNext+Integer.IsGreater(Container(8080).NumItems,0)+!Container(8080).IsUpdating+
      [[Control.HasFocus(9001)+String.IsEqual(Container(9001).ListItem.Property(background),Playlist.FanartList)+!String.IsEqual(Container(9001).ListItem.Property(backgroundplayliststyle),X2)+!String.IsEqual(Container(9000).ListItem.Property(backgroundplayliststyle),X3)]|[!Control.HasFocus(9001)+[String.IsEqual(Container(9000).ListItem.Property(background),Playlist.FanartList)|String.Contains(Container(9000).ListItem.Property(background),WDF1)|String.Contains(Container(9000).ListItem.Property(background),WDF2)|String.Contains(Container(9000).ListItem.Property(background),WDF3)]+!String.IsEqual(Container(9000).ListItem.Property(backgroundplayliststyle),X2)+!String.IsEqual(Container(9000).ListItem.Property(backgroundplayliststyle),X3)]]</visible>
      <animation effect="fade" start="10" end="100" time="500" reversible="false" >Visible</animation>
      <texture default="background.png">$INFO[Container(8080).ListItem.Art(fanart)]</texture>
    </control>


  </include>
  <include name="fanartSpeed0">
    <timeperimage>10000</timeperimage>
    <autoscroll>false</autoscroll>
  </include>
  <include name="fanartSpeed5">
    <timeperimage>5000</timeperimage>
  </include>
  <include name="fanartSpeed6">
    <timeperimage>6000</timeperimage>
  </include>
  <include name="fanartSpeed8">
    <timeperimage>8000</timeperimage>
  </include>
  <include name="fanartSpeed10">
    <timeperimage>10000</timeperimage>
  </include>
  <include name="fanartSpeed15">
    <timeperimage>15000</timeperimage>
  </include>
  <include name="fanartSpeed20">
    <timeperimage>20000</timeperimage>
  </include>
  <include name="fanartSpeed30">
    <timeperimage>30000</timeperimage>
  </include>
  <include name="fanartSpeed60">
    <timeperimage>60000</timeperimage>
  </include>
  <include name="delayfanartinc">
    
    <include condition="skin.string(RandomFanartDelay, 6)">fanartSpeed6</include>
    <include condition="skin.string(RandomFanartDelay, 5)">fanartSpeed5</include>
    <include condition="skin.string(RandomFanartDelay, 8)">fanartSpeed8</include>
    <include condition="skin.string(RandomFanartDelay, 10)">fanartSpeed10</include>
    <include condition="skin.string(RandomFanartDelay, 15)">fanartSpeed15</include>
    <include condition="skin.string(RandomFanartDelay, 20)">fanartSpeed20</include>
    <include condition="skin.string(RandomFanartDelay, 30)">fanartSpeed30</include>
    <include condition="skin.string(RandomFanartDelay, 60)">fanartSpeed60</include>
    <include condition="skin.string(RandomFanartDelay,)">fanartSpeed0</include>
  </include>

  <include name="randomizeImages">
    <randomize>true</randomize>
  </include>


 <variable name="backgroundVar">
    <value condition="!Window.IsVisible(10025)+!Window.IsVisible(502)+!Window.IsVisible(home)">background.png</value>
    
    <value condition="Control.HasFocus(9000)+[String.Contains(Container(9000).ListItem.Property(background),WDF1)|String.Contains(Container(9000).ListItem.Property(background),WDF2)]">$INFO[Window(Home).Property(iconmixwidgetfanart)]</value>
        <value condition="Control.HasFocus(9000)+String.Contains(Container(9000).ListItem.Property(background),WDF3)"></value>

    <value condition="[Control.HasFocus(9000)|Control.HasFocus(9001)]+Integer.IsGreater(Container(8080).NumItems,0)"></value>
    <value condition="Window.IsVisible(Home)+!Control.HasFocus(9000)+!Control.HasFocus(9001)+!String.IsEqual(Container(9000).ListItem.Property(widgetType),weather)+!String.IsEqual(Container(9000).ListItem.Property(widgetType),system)+!String.IsEmpty(Window(Home).Property(WidgetActifFanart))">$INFO[Window(Home).Property(WidgetActifFanart)]</value>
    <value condition="Window.IsVisible(Home)+!Control.HasFocus(9000)+!Control.HasFocus(9001)+!String.IsEqual(Container(9000).ListItem.Property(widgetType),weather)+!String.IsEqual(Container(9000).ListItem.Property(widgetType),system)+String.IsEmpty(Window(Home).Property(WidgetActifFanart))">background.png</value>
    <value condition="Window.IsVisible(Home)+Control.HasFocus(9001)+!String.IsEmpty(Container(9001).ListItem.Property(background))">$INFO[Container(9001).ListItem.Property(background)]</value>
    <value condition="Window.IsVisible(Home)+Control.HasFocus(9001)+String.IsEmpty(Container(9001).ListItem.Property(background))">background.png</value>
    <value>$INFO[Container(9000).ListItem.Property(background)]</value>
  </variable>

  <variable name="backgroundVarPlaylist">
    <value condition="Container(9000).OnNext|Container(9001).OnNext|Container(9000).OnPrevious|Container(9001).OnPrevious"></value>
    
    <value condition="!Control.HasFocus(9000)+Control.HasFocus(9001)+String.IsEqual(Container(9001).ListItem.Property(background),Playlist.FanartList)">$INFO[Container(9001).ListItem.Property(backgroundPlaylist)]</value>
    <value condition="!Control.HasFocus(9000)+Control.HasFocus(9001)+String.Contains(Container(9001).ListItem.Property(background),WDF1)">$INFO[Container(9001).ListItem.Property(widgetPath)]</value>
    <value condition="!Control.HasFocus(9000)+Control.HasFocus(9001)+String.Contains(Container(9001).ListItem.Property(background),WDF2)">$INFO[Container(9001).ListItem.Property(widgetPath.2)]</value>
    

    <value condition="!Control.HasFocus(9001)+[Control.HasFocus(9000)|String.IsEmpty(Window(Home).Property(WidgetActifFanart))]+String.IsEqual(Container(9000).ListItem.Property(background),Playlist.FanartList)">$INFO[Container(9000).ListItem.Property(backgroundPlaylist)]</value>
    <!-- -->
    <value condition="!Control.HasFocus(9001)+[Control.HasFocus(9000)|String.IsEmpty(Window(Home).Property(WidgetActifFanart))]+[String.Contains(Container(9000).ListItem.Property(background),WDF1)|String.Contains(Container(9000).ListItem.Property(background),WDF2)]+[String.IsEmpty(Container(9000).ListItem.Property(backgroundplayliststyle))|String.IsEqual(Container(9000).ListItem.Property(backgroundplayliststyle),X1)]"></value>
    <value condition="!Control.HasFocus(9001)+[Control.HasFocus(9000)|String.IsEmpty(Window(Home).Property(WidgetActifFanart))]+String.Contains(Container(9000).ListItem.Property(background),WDF1)">$INFO[Container(9000).ListItem.Property(widgetPath)]</value>
    <value condition="!Control.HasFocus(9001)+[Control.HasFocus(9000)|String.IsEmpty(Window(Home).Property(WidgetActifFanart))]+String.Contains(Container(9000).ListItem.Property(background),WDF2)">$INFO[Container(9000).ListItem.Property(widgetPath.2)]</value>
    <value condition="!Control.HasFocus(9001)+[Control.HasFocus(9000)|String.IsEmpty(Window(Home).Property(WidgetActifFanart))]+String.Contains(Container(9000).ListItem.Property(list),library:)+String.Contains(Container(9000).ListItem.Property(background),WDF3)">$INFO[Container(9000).ListItem.Property(list)]</value>
    <value condition="!Control.HasFocus(9001)+[Control.HasFocus(9000)|String.IsEmpty(Window(Home).Property(WidgetActifFanart))]+String.Contains(Container(9000).ListItem.Property(list),special:)+String.Contains(Container(9000).ListItem.Property(background),WDF3)">$INFO[Container(9000).ListItem.Property(list)]</value>
    <value condition="!Control.HasFocus(9001)+[Control.HasFocus(9000)|String.IsEmpty(Window(Home).Property(WidgetActifFanart))]+String.Contains(Container(9000).ListItem.Property(list),MovieTitles)+String.Contains(Container(9000).ListItem.Property(background),WDF3)">videodb://movies/titles</value>
    <value condition="!Control.HasFocus(9001)+[Control.HasFocus(9000)|String.IsEmpty(Window(Home).Property(WidgetActifFanart))]+String.Contains(Container(9000).ListItem.Property(list),TVShowTitles)+String.Contains(Container(9000).ListItem.Property(background),WDF3)">videodb://tvshows/titles</value>
    <value condition="!Control.HasFocus(9001)+[Control.HasFocus(9000)|String.IsEmpty(Window(Home).Property(WidgetActifFanart))]+String.Contains(Container(9000).ListItem.Property(list),Videos)+String.Contains(Container(9000).ListItem.Property(background),WDF3)">videodb://video/</value>
  </variable>

  <include name="playlistfond">
    <control type="image">
      <posx>0</posx>
      <posy>0</posy>
      <width>1920</width>
      <height>1080</height>
      <texture>fondjetees.jpg</texture>
      <visible>[Control.HasFocus(9001)+[String.IsEqual(Container(9001).ListItem.Property(backgroundplayliststyle),X3)|String.IsEqual(Container(9001).ListItem.Property(backgroundplayliststyle),X2)]+!Container(9001).OnNext+!Container(9001).OnPrevious]|[Control.HasFocus(9000)+[String.IsEqual(Container(9000).ListItem.Property(backgroundplayliststyle),X3)|String.IsEqual(Container(9000).ListItem.Property(backgroundplayliststyle),X2)]+!Container(9000).OnNext+!Container(9000).OnPrevious]</visible>
    </control>

    <control type="wraplist" id="8080">
      <posx>0</posx>
      <posy>-90</posy>
      <loop>true</loop>
      <itemlayout height="10" width="10" />
      <focusedlayout height="10" width="10" />
      <content sortby="random" >$VAR[backgroundVarPlaylist]</content>
      
    </control>
  </include>

<include name="ScrollFanart">
  <autoscroll time="5000" delay="500" repeat="5000">
    [Control.HasFocus(9001)+[!String.IsEqual(Container(9001).ListItem.Property(backgroundplayliststyle),X3)+!String.IsEqual(Container(9001).ListItem.Property(backgroundplayliststyle),X2)]]|
    [Control.HasFocus(9000)+[!String.IsEqual(Container(9000).ListItem.Property(backgroundplayliststyle),X3)+!String.IsEqual(Container(9000).ListItem.Property(backgroundplayliststyle),X2)]]
    +skin.string(RandomFanartDelay, 5)</autoscroll>
      <autoscroll time="6000" delay="500" repeat="6000">[Control.HasFocus(9001)+[!String.IsEqual(Container(9001).ListItem.Property(backgroundplayliststyle),X3)+!String.IsEqual(Container(9001).ListItem.Property(backgroundplayliststyle),X2)]]|
    [Control.HasFocus(9000)+[!String.IsEqual(Container(9000).ListItem.Property(backgroundplayliststyle),X3)+!String.IsEqual(Container(9000).ListItem.Property(backgroundplayliststyle),X2)]]
    +skin.string(RandomFanartDelay, 6)</autoscroll>
      <autoscroll time="8000" delay="500" repeat="8000">[Control.HasFocus(9001)+[!String.IsEqual(Container(9001).ListItem.Property(backgroundplayliststyle),X3)+!String.IsEqual(Container(9001).ListItem.Property(backgroundplayliststyle),X2)]]|
    [Control.HasFocus(9000)+[!String.IsEqual(Container(9000).ListItem.Property(backgroundplayliststyle),X3)+!String.IsEqual(Container(9000).ListItem.Property(backgroundplayliststyle),X2)]]
    +skin.string(RandomFanartDelay, 8)</autoscroll>
      <autoscroll time="10000" delay="500" repeat="10000">[Control.HasFocus(9001)+[!String.IsEqual(Container(9001).ListItem.Property(backgroundplayliststyle),X3)+!String.IsEqual(Container(9001).ListItem.Property(backgroundplayliststyle),X2)]]|
    [Control.HasFocus(9000)+[!String.IsEqual(Container(9000).ListItem.Property(backgroundplayliststyle),X3)+!String.IsEqual(Container(9000).ListItem.Property(backgroundplayliststyle),X2)]]
    +skin.string(RandomFanartDelay, 10)</autoscroll>
      <autoscroll time="15000" delay="500" repeat="15000">[Control.HasFocus(9001)+[!String.IsEqual(Container(9001).ListItem.Property(backgroundplayliststyle),X3)+!String.IsEqual(Container(9001).ListItem.Property(backgroundplayliststyle),X2)]]|
    [Control.HasFocus(9000)+[!String.IsEqual(Container(9000).ListItem.Property(backgroundplayliststyle),X3)+!String.IsEqual(Container(9000).ListItem.Property(backgroundplayliststyle),X2)]]
    +skin.string(RandomFanartDelay, 15)</autoscroll>
      <autoscroll time="20000" delay="500" repeat="20000">[Control.HasFocus(9001)+[!String.IsEqual(Container(9001).ListItem.Property(backgroundplayliststyle),X3)+!String.IsEqual(Container(9001).ListItem.Property(backgroundplayliststyle),X2)]]|
    [Control.HasFocus(9000)+[!String.IsEqual(Container(9000).ListItem.Property(backgroundplayliststyle),X3)+!String.IsEqual(Container(9000).ListItem.Property(backgroundplayliststyle),X2)]]
    +skin.string(RandomFanartDelay, 20)</autoscroll>
      <autoscroll time="30000" delay="500" repeat="30000">[Control.HasFocus(9001)+[!String.IsEqual(Container(9001).ListItem.Property(backgroundplayliststyle),X3)+!String.IsEqual(Container(9001).ListItem.Property(backgroundplayliststyle),X2)]]|
    [Control.HasFocus(9000)+[!String.IsEqual(Container(9000).ListItem.Property(backgroundplayliststyle),X3)+!String.IsEqual(Container(9000).ListItem.Property(backgroundplayliststyle),X2)]]
    +skin.string(RandomFanartDelay, 30)</autoscroll>
      <autoscroll time="60000" delay="500" repeat="60000">[Control.HasFocus(9001)+[!String.IsEqual(Container(9001).ListItem.Property(backgroundplayliststyle),X3)+!String.IsEqual(Container(9001).ListItem.Property(backgroundplayliststyle),X2)]]|
    [Control.HasFocus(9000)+[!String.IsEqual(Container(9000).ListItem.Property(backgroundplayliststyle),X3)+!String.IsEqual(Container(9000).ListItem.Property(backgroundplayliststyle),X2)]]
    +skin.string(RandomFanartDelay, 60)</autoscroll>
</include>

  <!--Global Background -->
  <include name="GlobalBackground">
    <!-- -->
    <control type="videowindow" id="1">
      <description>Video Preview</description>
      <visible>Player.HasVideo +!String.IsEmpty(VideoPlayer.DBID) + !Window.IsActive(selectdialog)  +Skin.HasSetting(PlayVideoOverlay)</visible>
    </control>
    -->
    <control type="group">
      <visible>[!Player.HasAudio |  [Player.HasAudio+ !Control.IsVisible(9044)]]+[!Player.HasVideo | [Player.HasVideo+!Skin.HasSetting(PlayVideoOverlay)]]</visible>
      
      <animation effect="fade" end="50" time="500" reversible="false" condition="String.IsEqual(Container(9000).ListItem.Property(widget),WeatherForecast)+Skin.HasSetting(MeteoPleinEcran)">Conditional</animation>
      <include>playlistfond</include>
      <control type="group">
         <!--  <animation effect="fade" end="70" condition="Skin.HasSetting(ShowFullWidgets)" >Conditional</animation> -->
          <animation effect="fade" start="100" end="70" reversible="true" condition="[Control.HasFocus(9000)|Control.HasFocus(9001)]+[Skin.HasSetting(ShowFullWidgets)|[!String.IsEmpty(Container(9000).ListItem.Property(widgetShow))+!String.IsEmpty(Container(9000).ListItem.Property(widget))]|[!String.IsEmpty(Container(9000).ListItem.Property(widgetShow.2))+!String.IsEmpty(Container(9000).ListItem.Property(widget.2))]]" >Conditional</animation> -->

          <include>Viewtype_MurHome</include>
          <include>pochettesjetees</include>
      

      <control type="image">
        <include>Dimensions_Fullscreen</include>
        <texture background="true">$INFO[Skin.String(CustomBackground)]</texture>
        <visible>!Integer.IsGreater(Container(8080).NumItems,0)+!Window.IsActive(10025)</visible>
        <visible>!Control.HasFocus(9000)|[Control.HasFocus(9000)+!String.Contains(Container(9000).ListItem.Property(background),WDF1)+!String.Contains(Container(9000).ListItem.Property(background),WDF2)+!String.Contains(Container(9000).ListItem.Property(background),WDF3)]</visible>
      </control>
       <control type="image">
        <visible>[!Control.HasFocus(9000)+!Control.HasFocus(9001)]|[Control.HasFocus(9000)|String.IsEmpty(Window(Home).Property(WidgetActifFanart))]+[String.Contains(Container(9000).ListItem.Property(background),WDF1)|String.Contains(Container(9000).ListItem.Property(background),WDF2)]+[String.IsEmpty(Container(9000).ListItem.Property(backgroundplayliststyle))|String.IsEqual(Container(9000).ListItem.Property(backgroundplayliststyle),X1)]</visible>
        <posx>0</posx>
        <width>1920</width>
        <height>1080</height>
        <texture background="true" colordiffuse="70FFFFFF" fallback="background.png">$VAR[backgroundVar]</texture>
        <aspectratio>keep</aspectratio>
       
        <animation effect="zoom" start="110" end="130" center="auto" time="12000" tween="cubic" easing="inout" pulse="true" condition="Skin.HasSetting(BackgroundAnimation)">Conditional</animation>
        <animation effect="slide" start="-10,-10" end="10,10" time="8000" tween="cubic" easing="inout" pulse="true" condition="Skin.HasSetting(BackgroundAnimation)">Conditional</animation>
      </control>

      <control type="multiimage" id="99004">
        <visible>!Integer.IsGreater(Container(8080).NumItems,0)+[Control.HasFocus(9000)|Control.HasFocus(9001)]</visible>
        <posx>0</posx>
        <width>1920</width>
        <height>1080</height>
        <visible>!Control.HasFocus(9000)|[Control.HasFocus(9000)+!String.Contains(Container(9000).ListItem.Property(background),WDF1)+!String.Contains(Container(9000).ListItem.Property(background),WDF2)+!String.Contains(Container(9000).ListItem.Property(background),WDF3)]</visible>
        <imagepath background="true" colordiffuse="FFFFFFFF" fallback="background.png">$VAR[backgroundVar]</imagepath>
        <aspectratio>keep</aspectratio>
        <fadetime>450</fadetime>
        
        <include>delayfanartinc</include>
        <randomize>true</randomize>
        <loop>yes</loop>
        <animation effect="zoom" start="110" end="130" center="auto" time="12000" tween="cubic" easing="inout" pulse="true" condition="Skin.HasSetting(BackgroundAnimation)">Conditional</animation>
        <animation effect="slide" start="-10,-10" end="10,10" time="8000" tween="cubic" easing="inout" pulse="true" condition="Skin.HasSetting(BackgroundAnimation)">Conditional</animation>
      </control>
      </control>
<!--
      <include>skinshortcuts-template-widget1Fanart</include>
      <include>skinshortcuts-template-widget2Fanart</include>
      -->
    </control>
    <!--		 telex --
    <control type="label">
    <label>$VAR[backgroundVarPlaylist] : $INFO[Container(8080).NumItems][CR]$INFO[Container(8080).ListItem.Label][CR]$INFO[Container(8080).ListItem(0).Art(poster)][CR]$INFO[Container(8080).ListItem(0).Icon]<label>
    </control>
    -->
    <control type="group">
      <visible>Player.HasAudio+Control.IsVisible(9044)</visible>
      <include>MusiqueBackGround</include>
    </control>
    <!-- --	<control type="label">
    <posy>50</posy>
    <label>**X1=$INFO[Container(9001).ListItem.Property(backgroundplayliststyle)][CR]Background=$VAR[Skin.String(CustomBackground)][CR]BackgroundInf=$INFO[Skin.String(CustomBackground)][CR]Actif:$INFO[Window(Home).Property(WidgetActifFanart)][CR]FanartWD1:$INFO[Window(Home).Property(WidgetFanart1)][CR]FanartWD2:$INFO[Window(Home).Property(WidgetFanart2)][CR]->$VAR[backgroundVarPlaylist][CR]VAR=$VAR[backgroundVar][CR]$INFO[Container(8080).ListItem.Art(fanart)][CR]Items:$INFO[Container(8080).NumItems]</label>

    </control>
    -->
  </include>

  <include name="GlobalBackgroundVideoInfo_Common">
    <aspectratio>stretch</aspectratio>
    <fadetime>450</fadetime>
    <visible>true</visible>
    <colordiffuse>CFFFFFFF</colordiffuse>
    <include>delayfanartinc</include>
    <include condition="Skin.HasSetting(RandomizeBackground)">randomizeImages</include>
    <loop>yes</loop>
    <animation effect="zoom" start="110" end="130" center="auto" time="12000" tween="cubic" easing="inout" pulse="true" >Conditional</animation>
    <animation effect="slide" start="-10,-10" end="10,10" time="8000" tween="cubic" easing="inout" pulse="true" >Conditional</animation>

  </include>

  <!--fanart dialoginfo -->
  <include name="GlobalBackgroundVideoInfo">
    <control type="group">
      <posx>420</posx>
      <posy>90</posy>



      <control type="group">
        <width>1250</width>
        <height>760</height>

        <control type="multiimage" id="90007">
          <include>GlobalBackgroundVideoInfo_Common</include>
          <imagepath loop="true"  diffuse="shine.png"  background="true">$VAR[GlobalFanart]</imagepath>

        </control>

      </control>

      <!---->


    </control>

  </include>


</includes>